---
import Link from "../Link.astro";
import Paragraph from "../Paragraph.astro";

const posts = await Promise.all(
  Object.entries(import.meta.glob('../../pages/posts/*.md', { eager: true }))
    .map(([path, post]) => ({
      ...post as any,
      url: path.replace('../../pages', '').replace('.md', '')
    }))
);

const sortedPosts = posts.sort((a, b) => {
  const dateA = new Date(a.frontmatter.pubDate);
  const dateB = new Date(b.frontmatter.pubDate);
  return dateB.getTime() - dateA.getTime();
}).slice(0, 3);

function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
}
---

<section>
    <div class="mb-8">
        <h2 class="text-2xl font-bold">blog</h2>
        <Paragraph>latest posts here, <Link href="/posts">discover more</Link></Paragraph>
    </div>

    <div class="mx-auto grid grid-cols-1 gap-x-8 gap-y-8 text-sm lg:text-base lg:mx-0 lg:grid-cols-3">
      {sortedPosts.length === 0 && (
        <p class="text-primary/80">no posts yet, coming soon</p>
      )}
      {sortedPosts.map((post) => (
        <article class="group flex max-w-xl flex-col items-start justify-between text-primary/80 hover:text-secondary transition-colors">
          <div class="flex items-center gap-x-4 text-xs">
            <time datetime={post.frontmatter.pubDate}>
              {formatDate(post.frontmatter.pubDate)}
            </time>
          </div>
          <div class="relative">
            <h3 class="mt-2 font-semibold text-primary group-hover:text-secondary transition-colors">
              <a href={post.url}>
                <span class="absolute inset-0"></span>
                {post.frontmatter.title}
              </a>
            </h3>
            <p class="mt-2 line-clamp-3 text-sm font-light ">{post.frontmatter.description}</p>
          </div>
        </article>
      ))}
    </div>
</section> 